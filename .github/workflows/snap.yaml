name: snap
on:
  push:
    tags:
      - '*'
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
  workflow_call:

jobs:
  main-snap:
    uses: canonical/robotics-actions-workflows/.github/workflows/snap.yaml@main
    with:
      lxd-image: ubuntu:18.04
      snapcraft-channel: 7.x
      git-ref: master
      snap-install-args: --devmode
      snap-test-script: |
                    #!/bin/bash

                    ## Install ROS
                    sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" > /etc/apt/sources.list.d/ros-latest.list'

                    sudo apt install --yes curl
                    curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
                    sudo apt update
                    sudo apt install --yes ros-melodic-ros-base

                    set +u
                    source /opt/ros/melodic/setup.bash
                    set -u

                    check_node() {
                        local node_name=$1
                        local error_code=0

                        error_code=$(rosnode list | grep -q "/$node_name"; echo $?)
                        if [ error_code? -eq 0 ]; then
                            echo "$node_name is running."
                        else
                            echo "Error - $node_name is not running."
                            kill $pid
                            exit 1
                        fi
                    }

                    check_topic() {
                        local topic_name=$1
                        local pub_name=$2
                        local sub_name=$3
                        local error_code=0

                        error_code=$(rostopic info /$topic_name | grep -E "$pub_name|$sub_name"; echo $?)
                        if [ error_code? -eq 0 ]; then
                            echo "$topic_name has publisher $pub_name and subscriber $sub_name."
                        else
                            echo "Error - $topic_name does not have pub/sub"
                            kill $pid
                            exit 1
                        fi
                    }

                    ros-talker-listener &
                    pid=$!

                    sleep 30

                    check_node talker
                    check_node listener
                    check_topic chatter talker listener
                    kill $pid

                    echo "All checks passed successfully."
